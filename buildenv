export ZOPEN_CATEGORIES="library"
export ZOPEN_NAME="zedc_ascii"
export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build  --install-prefix \$ZOPEN_INSTALL_DIR/ -DBUILD_TESTING=ON -DENABLE_STATIC_INIT=ON -DCMAKE_INSTALL_PREFIX=\$ZOPEN_INSTALL_DIR/ -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ."
export ZOPEN_CHECK=zopen_check
export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS=" --build ../build --parallel \$ZOPEN_NUM_JOBS --target all"
export ZOPEN_MAKE_MINIMAL="yes"
export ZOPEN_COMP=CLANG

export ZOPEN_BUILD_LINE="DEV"
export ZOPEN_DEV_URL="https://github.com/zopencommunity/libzedc_ascii.git"
export ZOPEN_DEV_DEPS="make cmake git coreutils"
export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

zopen_check()
{
  # Nothing to check at this time. Implement make check in libzedc_ascii
}

zopen_check_results()
{
  # Nothing to check here, assume everything passed
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:1"
  echo "expectedTotalTests:1"
}


zopen_append_to_env()
{
cat <<ZZ
if [ -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
    return 0; # Do nothing
fi

OLD_IFS=\$IFS
IFS=':'
zzfound=false

#Search in this path first - /usr/lpp/hzc/lib/

for p in \$ZOPEN_OLD_LIBPATH; do
   if [ -x "\$p/libzz.a" ]; then
     export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
     export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
     export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib -L\${p}"
     export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lzedc_ascii -lzz"
     zzfound=true
     break
   fi
done
IFS=\$OLD_IFS

if ! \${zzfound} ; then
    echo "Unable to find libzz.a" >&2
    return 1
fi
return 0

ZZ
}

#zopen_check()
#{
#	Validate the version
#}

zopen_get_version()
{
  set -e
  ZEDC_LIB_PATH=
  OLD_IFS=$IFS
  IFS=':'
  for p in $ZOPEN_OLD_LIBPATH; do
   if [ -x "$p/libzz.a" ]; then
	ZEDC_LIB_PATH=$p
        break
   fi
  done
  IFS=$OLD_IFS

  if [ ! -d "$TMPDIR" ]; then
    TMPDIR=/tmp
  fi
  TMP_EXE=$TMPDIR/zedclibver$$
  TMP_CPP=$TMPDIR/zedclibver$$.cc

  echo '
    #include <zlib.h>
    #include <stdio.h>

    int main(int argc, char** argv) {
      printf("%s", zlibVersion());
    }
  ' >$TMP_CPP

 (export ZOPEN_OLD_PATH=$PATH; PATH="$ZOPEN_OLD_PATH" $CXX $CXXFLAGS $CPPFLAGS -isystem include -isystem include/c++/v1/ -L $ZOPEN_INSTALL_DIR/lib -L $ZEDC_LIB_PATH -o$TMP_EXE $TMP_CPP -lzedc_ascii -lzz)
  $TMP_EXE && rm $TMP_CPP && rm $TMP_EXE

}

